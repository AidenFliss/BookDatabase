name: Auto Add Book + Increment Version

concurrency:
  group: booklist-update
  cancel-in-progress: false

on:
  issues:
    types: [opened]

jobs:
  process-new-book:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Process issue and update files
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const { execSync } = require("child_process");
            const issue = context.payload.issue;
            const title = issue.title || "";

            // Only handle "[NEW BOOK]" issues
            if (!title.startsWith("[NEW BOOK]")) {
              console.log("Not a new book request, skipping.");
              return;
            }

            const body = issue.body || "";
            const match = body.match(/```json([\s\S]*?)(?:```|$)/);
            if (!match) {
              console.log("No JSON found in issue.");
              return;
            }

            // Parse and clean book data
            let book;
            try {
              book = JSON.parse(match[1].trim());
            } catch (err) {
              console.log("Invalid JSON:", err);
              return;
            }

            for (const k in book) {
              if (typeof book[k] === "string") {
                book[k] = decodeURIComponent(book[k]);
              }
            }

            // === Update BookList.json ===
            const bookListPath = "BookList.json";
            if (!fs.existsSync(bookListPath)) {
              console.log("BookList.json not found.");
              return;
            }

            const listText = fs.readFileSync(bookListPath, "utf8");
            let list;
            try {
              list = JSON.parse(listText);
            } catch (err) {
              console.log("Error parsing BookList.json:", err);
              return;
            }

            const lastEmpty = list.pop();
            list.push(book);
            list.push(lastEmpty);

            fs.writeFileSync(bookListPath, JSON.stringify(list, null, 2) + "\n");

            // === Increment Version.json ===
            const versionPath = "Version.json";
            if (fs.existsSync(versionPath)) {
              let vData = JSON.parse(fs.readFileSync(versionPath, "utf8"));
              vData.version = (vData.version || 0) + 1;
              fs.writeFileSync(versionPath, JSON.stringify(vData, null, 2) + "\n");
            }

            // === Commit and push ===
            execSync("git config user.name 'github-actions[bot]'");
            execSync("git config user.email '41898282+github-actions[bot]@users.noreply.github.com'");
            execSync(`git add ${bookListPath} ${versionPath}`);
            execSync(`git commit -m "Auto add book from issue #${issue.number}"`);
            execSync("git push");

            // === Comment and close ===
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: "âœ… Book successfully added to `BookList.json`.\nðŸ”¢ `Version.json` incremented."
            });

            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              state: "closed"
            });

            console.log(`Book added, version updated, issue #${issue.number} closed.`);
